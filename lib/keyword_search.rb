
# line 1 "lib/keyword_search.rl"
require File.dirname(__FILE__) << '/keyword_search/definition.rb'

module KeywordSearch

  class ParseError < ::SyntaxError; end  
      
  class << self
  
    
# line 73 "lib/keyword_search.rl"

    
    def search(input_string, definition=nil, &block)
      definition ||= Definition.new(&block)
      results = parse(input_string)
      results.each do |key, terms|
        definition.handle(key, terms)
      end
      results
    end
    
    #######
    private
    #######
    
    def parse(input) #:nodoc:
      data = input + ' '
      
# line 32 "lib/keyword_search.rb"
class << self
	attr_accessor :_parser_actions
	private :_parser_actions, :_parser_actions=
end
self._parser_actions = [
	0, 1, 0, 1, 4, 1, 7, 1, 
	9, 2, 3, 1, 2, 3, 4, 2, 
	3, 8, 2, 4, 8, 3, 0, 3, 
	4, 3, 0, 3, 8, 3, 3, 4, 
	0, 3, 3, 4, 8, 3, 3, 8, 
	0, 3, 5, 0, 2, 3, 5, 2, 
	7, 3, 6, 0, 2, 3, 6, 2, 
	7
]

class << self
	attr_accessor :_parser_key_offsets
	private :_parser_key_offsets, :_parser_key_offsets=
end
self._parser_key_offsets = [
	0, 0, 8, 13, 21, 26, 31, 36, 
	37, 38, 40, 41, 42, 47, 53, 60, 
	66, 68, 76, 77, 78, 82, 87, 88, 
	89, 96, 103, 110, 112, 114, 119, 124, 
	129, 136, 142, 150, 157, 164, 171, 179, 
	181, 189, 196, 203, 211, 216, 224, 232, 
	239, 246, 254, 262, 268, 276, 283, 290, 
	298, 305, 313, 321, 328, 335, 343, 350, 
	358, 366, 373, 378, 384, 391, 397, 405, 
	406, 407, 411, 416, 417, 418, 425, 432, 
	439, 441, 443, 448, 453, 458, 465, 471, 
	479, 486, 493, 500, 508, 515, 523, 525, 
	530, 538, 545, 553, 561, 567, 575, 582, 
	589, 597, 604, 611, 618, 625, 633, 635, 
	637, 642, 647, 652, 659, 665, 673, 680, 
	687, 694, 702, 709, 717, 719, 724, 732, 
	739, 747, 754, 762, 770, 778, 785, 790, 
	795, 800, 805, 811, 818, 824, 832, 833, 
	834, 838, 843, 844, 845, 852, 859, 866, 
	868, 870, 875, 880, 885, 892, 898, 906, 
	913, 920, 927, 935, 942, 950, 958, 960, 
	965, 973, 980, 988, 996, 1002, 1010, 1017, 
	1025, 1032, 1039, 1046, 1048, 1050, 1055, 1060, 
	1065, 1072, 1078, 1086, 1093, 1100, 1107, 1112, 
	1119, 1125, 1133, 1140, 1147, 1154, 1156, 1161, 
	1168, 1175, 1181, 1189, 1196, 1203, 1210, 1212, 
	1214, 1219, 1224, 1229, 1236, 1242, 1250, 1257, 
	1264, 1271, 1279, 1286, 1294, 1302, 1304, 1309, 
	1317, 1324, 1332, 1340, 1342, 1347, 1355, 1362, 
	1370, 1372, 1377, 1385, 1392, 1400, 1408, 1410, 
	1415, 1423, 1430, 1438, 1445, 1452, 1459, 1466, 
	1474, 1481, 1483, 1485, 1490, 1495, 1500, 1507, 
	1513, 1521, 1528, 1535, 1542, 1550, 1557, 1565, 
	1573, 1575, 1580, 1588, 1596, 1603, 1610, 1618, 
	1625, 1633, 1640, 1648, 1656, 1664, 1671, 1676, 
	1682, 1689, 1695, 1703, 1704, 1705, 1709, 1714, 
	1715, 1716, 1723, 1730, 1737, 1739, 1741, 1746, 
	1751, 1756, 1763, 1769, 1777, 1784, 1791, 1798, 
	1806, 1813, 1821, 1829, 1831, 1839, 1846, 1853, 
	1861, 1866, 1874, 1881, 1889, 1897, 1903, 1911, 
	1918, 1926, 1933, 1940, 1947, 1949, 1951, 1956, 
	1961, 1966, 1973, 1979, 1987, 1994, 2001, 2008, 
	2016, 2023, 2031, 2039, 2041, 2049, 2056, 2063, 
	2071, 2077, 2084, 2086, 2088, 2093, 2100, 2107, 
	2113, 2121, 2128, 2135, 2142, 2144, 2146, 2151, 
	2156, 2161, 2168, 2174, 2182, 2189, 2196, 2203, 
	2211, 2218, 2226, 2234, 2236, 2244, 2251, 2258, 
	2266, 2271, 2279, 2286, 2294, 2302, 2304, 2309, 
	2314, 2319, 2327, 2334, 2341, 2348, 2356, 2363, 
	2371, 2376, 2384, 2391, 2399, 2406, 2413, 2420, 
	2427, 2435, 2442, 2444, 2446, 2451, 2456, 2461, 
	2468, 2474, 2482, 2489, 2496, 2503, 2511, 2518, 
	2526, 2534, 2536, 2544, 2551, 2558, 2566, 2571, 
	2579, 2587, 2594, 2601, 2609, 2616, 2624, 2631, 
	2639, 2647, 2655, 2662, 2667, 2672, 2677, 2682, 
	2687
]

class << self
	attr_accessor :_parser_trans_keys
	private :_parser_trans_keys, :_parser_trans_keys=
end
self._parser_trans_keys = [
	0, 32, 34, 39, 40, 43, 45, 58, 
	0, 32, 34, 41, 58, 0, 32, 34, 
	39, 40, 43, 45, 58, 0, 32, 34, 
	41, 58, 32, 34, 39, 40, 58, 0, 
	32, 34, 41, 58, 34, 34, 0, 32, 
	39, 39, 32, 34, 39, 40, 58, 32, 
	34, 41, 44, 58, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 41, 44, 
	58, 124, 0, 32, 32, 34, 39, 40, 
	41, 44, 58, 124, 34, 34, 32, 41, 
	44, 124, 32, 34, 39, 40, 58, 39, 
	39, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 34, 39, 
	34, 39, 32, 39, 41, 44, 124, 32, 
	34, 39, 40, 58, 32, 34, 41, 44, 
	124, 32, 34, 39, 40, 44, 58, 124, 
	32, 34, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 34, 39, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 40, 58, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	40, 58, 32, 34, 41, 44, 58, 124, 
	32, 34, 39, 40, 44, 58, 124, 32, 
	34, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 34, 34, 32, 
	41, 44, 124, 32, 34, 39, 40, 58, 
	39, 39, 32, 34, 39, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 40, 44, 58, 124, 34, 
	39, 34, 39, 32, 39, 41, 44, 124, 
	32, 34, 39, 40, 58, 32, 34, 41, 
	44, 124, 32, 34, 39, 40, 44, 58, 
	124, 32, 34, 41, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 34, 39, 32, 34, 39, 
	40, 58, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 41, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 40, 44, 
	58, 124, 32, 34, 39, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 34, 39, 34, 39, 32, 39, 41, 
	44, 124, 32, 34, 39, 40, 58, 32, 
	34, 41, 44, 124, 32, 34, 39, 40, 
	44, 58, 124, 32, 34, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 40, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 34, 39, 32, 
	34, 39, 40, 58, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 40, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 41, 44, 58, 
	124, 32, 34, 39, 40, 58, 32, 34, 
	39, 40, 58, 32, 34, 39, 40, 58, 
	32, 34, 39, 40, 58, 32, 34, 41, 
	44, 58, 124, 32, 34, 39, 40, 44, 
	58, 124, 32, 34, 41, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	34, 34, 32, 41, 44, 124, 32, 34, 
	39, 40, 58, 39, 39, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 40, 44, 
	58, 124, 34, 39, 34, 39, 32, 39, 
	41, 44, 124, 32, 34, 39, 40, 58, 
	32, 34, 41, 44, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 40, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 34, 39, 
	32, 34, 39, 40, 58, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 34, 39, 
	34, 39, 32, 39, 41, 44, 124, 32, 
	34, 39, 40, 58, 32, 34, 41, 44, 
	124, 32, 34, 39, 40, 44, 58, 124, 
	32, 34, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	44, 58, 124, 32, 34, 41, 44, 124, 
	32, 34, 39, 40, 44, 58, 124, 32, 
	34, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 40, 44, 
	58, 124, 34, 39, 32, 39, 41, 44, 
	124, 32, 34, 39, 40, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 40, 44, 
	58, 124, 34, 39, 34, 39, 32, 39, 
	41, 44, 124, 32, 34, 39, 40, 58, 
	32, 34, 41, 44, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 40, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 34, 39, 
	32, 34, 39, 40, 58, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 34, 39, 32, 34, 
	39, 40, 58, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 40, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 34, 39, 32, 34, 39, 40, 
	58, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 40, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	34, 39, 32, 34, 39, 40, 58, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 34, 39, 34, 39, 32, 39, 41, 
	44, 124, 32, 34, 39, 40, 58, 32, 
	34, 41, 44, 124, 32, 34, 39, 40, 
	44, 58, 124, 32, 34, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 40, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 34, 39, 32, 
	34, 39, 40, 58, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 40, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 40, 58, 32, 34, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 32, 34, 41, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 34, 
	34, 32, 41, 44, 124, 32, 34, 39, 
	40, 58, 39, 39, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 34, 39, 34, 39, 32, 39, 41, 
	44, 124, 32, 34, 39, 40, 58, 32, 
	34, 41, 44, 124, 32, 34, 39, 40, 
	44, 58, 124, 32, 34, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 40, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 34, 39, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	40, 58, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 41, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	44, 58, 124, 34, 39, 34, 39, 32, 
	39, 41, 44, 124, 32, 34, 39, 40, 
	58, 32, 34, 41, 44, 124, 32, 34, 
	39, 40, 44, 58, 124, 32, 34, 41, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 39, 41, 44, 58, 
	124, 32, 34, 39, 40, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 40, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 34, 
	39, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 41, 44, 58, 124, 32, 34, 39, 
	40, 44, 58, 124, 34, 39, 34, 39, 
	32, 39, 41, 44, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 34, 39, 
	34, 39, 32, 39, 41, 44, 124, 32, 
	34, 39, 40, 58, 32, 34, 41, 44, 
	124, 32, 34, 39, 40, 44, 58, 124, 
	32, 34, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 40, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 34, 39, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 58, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 34, 39, 
	32, 34, 41, 44, 124, 32, 34, 39, 
	40, 58, 32, 34, 39, 40, 58, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 40, 58, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 40, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 40, 44, 
	58, 124, 34, 39, 34, 39, 32, 39, 
	41, 44, 124, 32, 34, 39, 40, 58, 
	32, 34, 41, 44, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 40, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 34, 39, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 40, 58, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 39, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 40, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 40, 58, 32, 34, 39, 40, 58, 
	0, 32, 34, 41, 58, 0, 32, 34, 
	41, 58, 0, 32, 34, 41, 58, 0
]

class << self
	attr_accessor :_parser_single_lengths
	private :_parser_single_lengths, :_parser_single_lengths=
end
self._parser_single_lengths = [
	0, 8, 5, 8, 5, 5, 5, 1, 
	1, 2, 1, 1, 5, 6, 7, 6, 
	2, 8, 1, 1, 4, 5, 1, 1, 
	7, 7, 7, 2, 2, 5, 5, 5, 
	7, 6, 8, 7, 7, 7, 8, 2, 
	8, 7, 7, 8, 5, 8, 8, 7, 
	7, 8, 8, 6, 8, 7, 7, 8, 
	7, 8, 8, 7, 7, 8, 7, 8, 
	8, 7, 5, 6, 7, 6, 8, 1, 
	1, 4, 5, 1, 1, 7, 7, 7, 
	2, 2, 5, 5, 5, 7, 6, 8, 
	7, 7, 7, 8, 7, 8, 2, 5, 
	8, 7, 8, 8, 6, 8, 7, 7, 
	8, 7, 7, 7, 7, 8, 2, 2, 
	5, 5, 5, 7, 6, 8, 7, 7, 
	7, 8, 7, 8, 2, 5, 8, 7, 
	8, 7, 8, 8, 8, 7, 5, 5, 
	5, 5, 6, 7, 6, 8, 1, 1, 
	4, 5, 1, 1, 7, 7, 7, 2, 
	2, 5, 5, 5, 7, 6, 8, 7, 
	7, 7, 8, 7, 8, 8, 2, 5, 
	8, 7, 8, 8, 6, 8, 7, 8, 
	7, 7, 7, 2, 2, 5, 5, 5, 
	7, 6, 8, 7, 7, 7, 5, 7, 
	6, 8, 7, 7, 7, 2, 5, 7, 
	7, 6, 8, 7, 7, 7, 2, 2, 
	5, 5, 5, 7, 6, 8, 7, 7, 
	7, 8, 7, 8, 8, 2, 5, 8, 
	7, 8, 8, 2, 5, 8, 7, 8, 
	2, 5, 8, 7, 8, 8, 2, 5, 
	8, 7, 8, 7, 7, 7, 7, 8, 
	7, 2, 2, 5, 5, 5, 7, 6, 
	8, 7, 7, 7, 8, 7, 8, 8, 
	2, 5, 8, 8, 7, 7, 8, 7, 
	8, 7, 8, 8, 8, 7, 5, 6, 
	7, 6, 8, 1, 1, 4, 5, 1, 
	1, 7, 7, 7, 2, 2, 5, 5, 
	5, 7, 6, 8, 7, 7, 7, 8, 
	7, 8, 8, 2, 8, 7, 7, 8, 
	5, 8, 7, 8, 8, 6, 8, 7, 
	8, 7, 7, 7, 2, 2, 5, 5, 
	5, 7, 6, 8, 7, 7, 7, 8, 
	7, 8, 8, 2, 8, 7, 7, 8, 
	6, 7, 2, 2, 5, 7, 7, 6, 
	8, 7, 7, 7, 2, 2, 5, 5, 
	5, 7, 6, 8, 7, 7, 7, 8, 
	7, 8, 8, 2, 8, 7, 7, 8, 
	5, 8, 7, 8, 8, 2, 5, 5, 
	5, 8, 7, 7, 7, 8, 7, 8, 
	5, 8, 7, 8, 7, 7, 7, 7, 
	8, 7, 2, 2, 5, 5, 5, 7, 
	6, 8, 7, 7, 7, 8, 7, 8, 
	8, 2, 8, 7, 7, 8, 5, 8, 
	8, 7, 7, 8, 7, 8, 7, 8, 
	8, 8, 7, 5, 5, 5, 5, 5, 
	0
]

class << self
	attr_accessor :_parser_range_lengths
	private :_parser_range_lengths, :_parser_range_lengths=
end
self._parser_range_lengths = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0
]

class << self
	attr_accessor :_parser_index_offsets
	private :_parser_index_offsets, :_parser_index_offsets=
end
self._parser_index_offsets = [
	0, 0, 9, 15, 24, 30, 36, 42, 
	44, 46, 49, 51, 53, 59, 66, 74, 
	81, 84, 93, 95, 97, 102, 108, 110, 
	112, 120, 128, 136, 139, 142, 148, 154, 
	160, 168, 175, 184, 192, 200, 208, 217, 
	220, 229, 237, 245, 254, 260, 269, 278, 
	286, 294, 303, 312, 319, 328, 336, 344, 
	353, 361, 370, 379, 387, 395, 404, 412, 
	421, 430, 438, 444, 451, 459, 466, 475, 
	477, 479, 484, 490, 492, 494, 502, 510, 
	518, 521, 524, 530, 536, 542, 550, 557, 
	566, 574, 582, 590, 599, 607, 616, 619, 
	625, 634, 642, 651, 660, 667, 676, 684, 
	692, 701, 709, 717, 725, 733, 742, 745, 
	748, 754, 760, 766, 774, 781, 790, 798, 
	806, 814, 823, 831, 840, 843, 849, 858, 
	866, 875, 883, 892, 901, 910, 918, 924, 
	930, 936, 942, 949, 957, 964, 973, 975, 
	977, 982, 988, 990, 992, 1000, 1008, 1016, 
	1019, 1022, 1028, 1034, 1040, 1048, 1055, 1064, 
	1072, 1080, 1088, 1097, 1105, 1114, 1123, 1126, 
	1132, 1141, 1149, 1158, 1167, 1174, 1183, 1191, 
	1200, 1208, 1216, 1224, 1227, 1230, 1236, 1242, 
	1248, 1256, 1263, 1272, 1280, 1288, 1296, 1302, 
	1310, 1317, 1326, 1334, 1342, 1350, 1353, 1359, 
	1367, 1375, 1382, 1391, 1399, 1407, 1415, 1418, 
	1421, 1427, 1433, 1439, 1447, 1454, 1463, 1471, 
	1479, 1487, 1496, 1504, 1513, 1522, 1525, 1531, 
	1540, 1548, 1557, 1566, 1569, 1575, 1584, 1592, 
	1601, 1604, 1610, 1619, 1627, 1636, 1645, 1648, 
	1654, 1663, 1671, 1680, 1688, 1696, 1704, 1712, 
	1721, 1729, 1732, 1735, 1741, 1747, 1753, 1761, 
	1768, 1777, 1785, 1793, 1801, 1810, 1818, 1827, 
	1836, 1839, 1845, 1854, 1863, 1871, 1879, 1888, 
	1896, 1905, 1913, 1922, 1931, 1940, 1948, 1954, 
	1961, 1969, 1976, 1985, 1987, 1989, 1994, 2000, 
	2002, 2004, 2012, 2020, 2028, 2031, 2034, 2040, 
	2046, 2052, 2060, 2067, 2076, 2084, 2092, 2100, 
	2109, 2117, 2126, 2135, 2138, 2147, 2155, 2163, 
	2172, 2178, 2187, 2195, 2204, 2213, 2220, 2229, 
	2237, 2246, 2254, 2262, 2270, 2273, 2276, 2282, 
	2288, 2294, 2302, 2309, 2318, 2326, 2334, 2342, 
	2351, 2359, 2368, 2377, 2380, 2389, 2397, 2405, 
	2414, 2421, 2429, 2432, 2435, 2441, 2449, 2457, 
	2464, 2473, 2481, 2489, 2497, 2500, 2503, 2509, 
	2515, 2521, 2529, 2536, 2545, 2553, 2561, 2569, 
	2578, 2586, 2595, 2604, 2607, 2616, 2624, 2632, 
	2641, 2647, 2656, 2664, 2673, 2682, 2685, 2691, 
	2697, 2703, 2712, 2720, 2728, 2736, 2745, 2753, 
	2762, 2768, 2777, 2785, 2794, 2802, 2810, 2818, 
	2826, 2835, 2843, 2846, 2849, 2855, 2861, 2867, 
	2875, 2882, 2891, 2899, 2907, 2915, 2924, 2932, 
	2941, 2950, 2953, 2962, 2970, 2978, 2987, 2993, 
	3002, 3011, 3019, 3027, 3036, 3044, 3053, 3061, 
	3070, 3079, 3088, 3096, 3102, 3108, 3114, 3120, 
	3126
]

class << self
	attr_accessor :_parser_trans_targs
	private :_parser_trans_targs, :_parser_trans_targs=
end
self._parser_trans_targs = [
	437, 1, 7, 10, 278, 435, 436, 0, 
	2, 437, 3, 0, 0, 136, 2, 438, 
	3, 7, 10, 66, 134, 135, 0, 4, 
	438, 3, 0, 0, 5, 4, 5, 7, 
	10, 12, 0, 6, 439, 3, 0, 0, 
	0, 6, 9, 8, 9, 8, 440, 3, 
	0, 9, 11, 9, 11, 0, 18, 22, 
	0, 0, 13, 14, 0, 16, 50, 0, 
	50, 13, 14, 18, 22, 0, 46, 0, 
	46, 15, 14, 0, 16, 17, 0, 17, 
	15, 440, 3, 0, 14, 18, 24, 15, 
	16, 17, 0, 17, 15, 20, 19, 20, 
	19, 14, 16, 21, 21, 0, 21, 18, 
	22, 0, 0, 15, 20, 23, 20, 23, 
	26, 23, 15, 16, 45, 23, 45, 25, 
	26, 23, 15, 16, 45, 23, 45, 25, 
	26, 27, 20, 23, 45, 23, 45, 25, 
	29, 31, 28, 29, 31, 28, 26, 20, 
	16, 30, 30, 23, 30, 27, 20, 23, 
	23, 25, 32, 20, 16, 44, 44, 19, 
	32, 20, 39, 19, 40, 19, 40, 33, 
	32, 20, 16, 34, 19, 34, 33, 32, 
	20, 35, 33, 16, 34, 19, 34, 33, 
	37, 29, 33, 16, 38, 28, 38, 36, 
	37, 29, 33, 16, 38, 28, 38, 36, 
	37, 20, 31, 28, 38, 28, 38, 36, 
	37, 20, 31, 36, 16, 38, 28, 38, 
	36, 29, 31, 28, 32, 20, 41, 33, 
	16, 34, 19, 34, 33, 37, 29, 33, 
	16, 43, 28, 43, 42, 37, 29, 33, 
	16, 43, 28, 43, 42, 37, 20, 33, 
	42, 16, 43, 28, 43, 42, 44, 20, 
	39, 19, 19, 33, 26, 27, 20, 25, 
	16, 45, 23, 45, 25, 14, 18, 47, 
	15, 16, 17, 0, 17, 15, 26, 23, 
	15, 16, 49, 23, 49, 48, 26, 23, 
	15, 16, 49, 23, 49, 48, 26, 27, 
	15, 48, 16, 49, 23, 49, 48, 14, 
	18, 59, 13, 16, 64, 0, 64, 51, 
	14, 0, 16, 52, 0, 52, 51, 14, 
	18, 53, 51, 16, 52, 0, 52, 51, 
	26, 23, 51, 16, 55, 23, 55, 54, 
	26, 23, 51, 16, 55, 23, 55, 54, 
	56, 27, 20, 54, 16, 58, 23, 58, 
	54, 56, 27, 20, 23, 57, 23, 57, 
	25, 26, 27, 15, 25, 16, 45, 23, 
	45, 25, 56, 27, 15, 54, 16, 58, 
	23, 58, 54, 26, 23, 13, 16, 61, 
	23, 61, 60, 26, 23, 13, 16, 61, 
	23, 61, 60, 26, 27, 20, 60, 16, 
	63, 23, 63, 62, 26, 23, 51, 16, 
	63, 23, 63, 62, 26, 27, 20, 62, 
	16, 63, 23, 63, 62, 14, 18, 65, 
	51, 16, 52, 0, 52, 51, 26, 23, 
	51, 16, 63, 23, 63, 62, 0, 71, 
	75, 0, 0, 67, 68, 0, 16, 99, 
	0, 99, 67, 68, 71, 75, 0, 70, 
	0, 70, 69, 68, 0, 16, 70, 0, 
	70, 69, 68, 71, 77, 69, 16, 70, 
	0, 70, 69, 73, 72, 73, 72, 68, 
	16, 74, 74, 0, 74, 71, 75, 0, 
	0, 69, 73, 76, 73, 76, 79, 76, 
	69, 16, 98, 76, 98, 78, 79, 76, 
	69, 16, 98, 76, 98, 78, 79, 80, 
	73, 76, 96, 76, 96, 78, 82, 84, 
	81, 82, 84, 81, 79, 73, 16, 83, 
	83, 76, 83, 80, 73, 76, 76, 78, 
	85, 73, 16, 95, 95, 72, 85, 73, 
	94, 72, 87, 72, 87, 86, 85, 73, 
	16, 87, 72, 87, 86, 85, 73, 88, 
	86, 16, 87, 72, 87, 86, 90, 82, 
	86, 16, 93, 81, 93, 89, 90, 82, 
	86, 16, 93, 81, 93, 89, 90, 82, 
	84, 81, 91, 81, 91, 89, 92, 82, 
	84, 89, 16, 93, 81, 93, 89, 92, 
	82, 84, 81, 93, 81, 93, 89, 92, 
	82, 86, 89, 16, 93, 81, 93, 89, 
	82, 84, 81, 95, 73, 94, 72, 72, 
	86, 97, 80, 73, 78, 16, 98, 76, 
	98, 78, 97, 80, 73, 76, 98, 76, 
	98, 78, 97, 80, 69, 78, 16, 98, 
	76, 98, 78, 68, 71, 105, 67, 16, 
	132, 0, 132, 100, 68, 0, 16, 101, 
	0, 101, 100, 68, 71, 102, 100, 16, 
	101, 0, 101, 100, 79, 76, 100, 16, 
	104, 76, 104, 103, 79, 76, 100, 16, 
	104, 76, 104, 103, 97, 80, 100, 103, 
	16, 104, 76, 104, 103, 107, 76, 67, 
	16, 126, 76, 126, 106, 107, 76, 67, 
	16, 126, 76, 126, 106, 107, 110, 73, 
	76, 109, 76, 109, 108, 107, 76, 69, 
	16, 109, 76, 109, 108, 107, 110, 73, 
	108, 16, 109, 76, 109, 108, 112, 114, 
	111, 112, 114, 111, 107, 73, 16, 113, 
	113, 76, 113, 110, 73, 76, 76, 108, 
	115, 73, 16, 125, 125, 72, 115, 73, 
	124, 72, 117, 72, 117, 116, 115, 73, 
	16, 117, 72, 117, 116, 115, 73, 118, 
	116, 16, 117, 72, 117, 116, 120, 112, 
	116, 16, 123, 111, 123, 119, 120, 112, 
	116, 16, 123, 111, 123, 119, 120, 73, 
	114, 111, 121, 111, 121, 119, 122, 73, 
	114, 119, 16, 123, 111, 123, 119, 122, 
	73, 114, 111, 123, 111, 123, 119, 122, 
	73, 116, 119, 16, 123, 111, 123, 119, 
	112, 114, 111, 125, 73, 124, 72, 72, 
	116, 129, 110, 67, 106, 16, 131, 76, 
	131, 127, 107, 76, 100, 16, 128, 76, 
	128, 127, 129, 110, 67, 127, 16, 131, 
	76, 131, 127, 129, 110, 73, 76, 130, 
	76, 130, 108, 107, 110, 69, 108, 16, 
	109, 76, 109, 108, 129, 110, 100, 127, 
	16, 131, 76, 131, 127, 68, 71, 133, 
	100, 16, 101, 0, 101, 100, 107, 76, 
	100, 16, 128, 76, 128, 127, 0, 7, 
	10, 66, 0, 4, 0, 7, 10, 66, 
	0, 4, 136, 7, 10, 137, 0, 6, 
	0, 142, 146, 0, 0, 138, 139, 0, 
	16, 171, 0, 171, 138, 139, 142, 146, 
	0, 141, 0, 141, 140, 139, 0, 16, 
	141, 0, 141, 140, 139, 142, 148, 140, 
	16, 141, 0, 141, 140, 144, 143, 144, 
	143, 139, 16, 145, 145, 0, 145, 142, 
	146, 0, 0, 140, 144, 147, 144, 147, 
	150, 147, 140, 16, 170, 147, 170, 149, 
	150, 147, 140, 16, 170, 147, 170, 149, 
	150, 151, 144, 147, 168, 147, 168, 149, 
	153, 155, 152, 153, 155, 152, 150, 144, 
	16, 154, 154, 147, 154, 151, 144, 147, 
	147, 149, 156, 144, 16, 167, 167, 143, 
	156, 144, 166, 143, 158, 143, 158, 157, 
	156, 144, 16, 158, 143, 158, 157, 156, 
	144, 159, 157, 16, 158, 143, 158, 157, 
	161, 153, 157, 16, 165, 152, 165, 160, 
	161, 153, 157, 16, 165, 152, 165, 160, 
	161, 153, 144, 152, 162, 152, 162, 160, 
	163, 153, 155, 160, 16, 165, 152, 165, 
	160, 163, 153, 144, 152, 164, 152, 164, 
	160, 163, 153, 157, 160, 16, 165, 152, 
	165, 160, 163, 153, 140, 160, 16, 165, 
	152, 165, 160, 153, 155, 152, 167, 144, 
	166, 143, 143, 157, 169, 151, 144, 149, 
	16, 170, 147, 170, 149, 169, 151, 144, 
	147, 170, 147, 170, 149, 169, 151, 140, 
	149, 16, 170, 147, 170, 149, 174, 142, 
	268, 138, 16, 276, 0, 276, 172, 139, 
	0, 16, 173, 0, 173, 172, 174, 142, 
	243, 172, 16, 173, 0, 173, 172, 174, 
	142, 146, 0, 175, 0, 175, 140, 139, 
	142, 176, 140, 16, 141, 0, 141, 140, 
	178, 147, 140, 16, 242, 147, 242, 177, 
	178, 147, 140, 16, 242, 147, 242, 177, 
	178, 179, 144, 147, 240, 147, 240, 177, 
	181, 183, 180, 181, 183, 180, 178, 144, 
	16, 182, 182, 147, 182, 179, 144, 147, 
	147, 177, 184, 144, 16, 239, 239, 143, 
	184, 144, 238, 143, 186, 143, 186, 185, 
	184, 144, 16, 186, 143, 186, 185, 184, 
	144, 187, 185, 16, 186, 143, 186, 185, 
	189, 181, 185, 16, 237, 180, 237, 188, 
	189, 181, 185, 16, 237, 180, 237, 188, 
	189, 181, 190, 180, 234, 180, 234, 188, 
	191, 144, 16, 233, 233, 143, 191, 144, 
	232, 143, 193, 143, 193, 192, 191, 144, 
	16, 193, 143, 193, 192, 191, 144, 194, 
	192, 16, 193, 143, 193, 192, 196, 198, 
	192, 16, 231, 197, 231, 195, 196, 198, 
	192, 16, 231, 197, 231, 195, 196, 144, 
	190, 197, 229, 197, 229, 195, 198, 190, 
	197, 199, 144, 16, 228, 228, 147, 199, 
	227, 144, 147, 226, 147, 226, 200, 199, 
	147, 201, 16, 226, 147, 226, 200, 139, 
	0, 16, 202, 0, 202, 140, 174, 142, 
	203, 140, 16, 175, 0, 175, 140, 205, 
	147, 201, 16, 225, 147, 225, 204, 205, 
	147, 201, 16, 225, 147, 225, 204, 205, 
	206, 144, 147, 223, 147, 223, 204, 208, 
	210, 207, 208, 210, 207, 205, 144, 16, 
	209, 209, 147, 209, 206, 144, 147, 147, 
	204, 211, 144, 16, 222, 222, 143, 211, 
	144, 221, 143, 213, 143, 213, 212, 211, 
	144, 16, 213, 143, 213, 212, 211, 144, 
	214, 212, 16, 213, 143, 213, 212, 216, 
	208, 212, 16, 220, 207, 220, 215, 216, 
	208, 212, 16, 220, 207, 220, 215, 216, 
	153, 144, 207, 217, 207, 217, 215, 218, 
	153, 210, 215, 16, 220, 207, 220, 215, 
	218, 153, 144, 207, 219, 207, 219, 215, 
	218, 153, 212, 215, 16, 220, 207, 220, 
	215, 218, 153, 140, 215, 16, 220, 207, 
	220, 215, 208, 210, 207, 222, 144, 221, 
	143, 143, 212, 224, 206, 144, 204, 16, 
	225, 147, 225, 204, 224, 206, 144, 147, 
	225, 147, 225, 204, 224, 206, 201, 204, 
	16, 225, 147, 225, 204, 199, 227, 144, 
	200, 16, 226, 147, 226, 200, 198, 190, 
	197, 228, 227, 144, 147, 147, 200, 230, 
	144, 190, 195, 16, 231, 197, 231, 195, 
	230, 144, 190, 197, 231, 197, 231, 195, 
	230, 144, 192, 195, 16, 231, 197, 231, 
	195, 198, 190, 197, 233, 144, 232, 143, 
	143, 192, 235, 181, 183, 188, 16, 237, 
	180, 237, 188, 235, 181, 190, 180, 236, 
	180, 236, 188, 235, 181, 185, 188, 16, 
	237, 180, 237, 188, 235, 181, 192, 188, 
	16, 237, 180, 237, 188, 181, 183, 180, 
	239, 144, 238, 143, 143, 185, 241, 179, 
	144, 177, 16, 242, 147, 242, 177, 241, 
	179, 144, 147, 242, 147, 242, 177, 241, 
	179, 140, 177, 16, 242, 147, 242, 177, 
	245, 147, 172, 16, 267, 147, 267, 244, 
	245, 147, 172, 16, 267, 147, 267, 244, 
	245, 249, 144, 147, 266, 147, 266, 246, 
	245, 147, 201, 16, 247, 147, 247, 246, 
	248, 249, 201, 246, 16, 247, 147, 247, 
	246, 248, 249, 144, 147, 247, 147, 247, 
	246, 251, 253, 250, 251, 253, 250, 245, 
	144, 16, 252, 252, 147, 252, 249, 144, 
	147, 147, 246, 254, 144, 16, 265, 265, 
	143, 254, 144, 264, 143, 256, 143, 256, 
	255, 254, 144, 16, 256, 143, 256, 255, 
	254, 144, 257, 255, 16, 256, 143, 256, 
	255, 259, 251, 255, 16, 263, 250, 263, 
	258, 259, 251, 255, 16, 263, 250, 263, 
	258, 259, 181, 190, 250, 260, 250, 260, 
	258, 261, 181, 253, 258, 16, 263, 250, 
	263, 258, 261, 181, 190, 250, 262, 250, 
	262, 258, 261, 181, 255, 258, 16, 263, 
	250, 263, 258, 261, 181, 192, 258, 16, 
	263, 250, 263, 258, 251, 253, 250, 265, 
	144, 264, 143, 143, 255, 248, 249, 144, 
	246, 16, 247, 147, 247, 246, 248, 249, 
	201, 244, 16, 267, 147, 267, 244, 199, 
	147, 138, 16, 270, 147, 270, 269, 199, 
	147, 138, 16, 270, 147, 270, 269, 273, 
	227, 144, 269, 16, 275, 147, 275, 271, 
	199, 147, 172, 16, 272, 147, 272, 271, 
	273, 227, 144, 271, 16, 275, 147, 275, 
	271, 273, 227, 144, 147, 274, 147, 274, 
	200, 199, 227, 201, 200, 16, 226, 147, 
	226, 200, 273, 227, 201, 271, 16, 275, 
	147, 275, 271, 174, 142, 277, 172, 16, 
	173, 0, 173, 172, 199, 147, 172, 16, 
	272, 147, 272, 271, 0, 283, 287, 0, 
	0, 279, 280, 0, 16, 316, 0, 316, 
	279, 280, 283, 287, 0, 282, 0, 282, 
	281, 280, 0, 16, 282, 0, 282, 281, 
	280, 283, 289, 281, 16, 282, 0, 282, 
	281, 285, 284, 285, 284, 280, 16, 286, 
	286, 0, 286, 283, 287, 0, 0, 281, 
	285, 288, 285, 288, 291, 288, 281, 16, 
	315, 288, 315, 290, 291, 288, 281, 16, 
	315, 288, 315, 290, 291, 292, 285, 288, 
	313, 288, 313, 290, 294, 296, 293, 294, 
	296, 293, 291, 285, 16, 295, 295, 288, 
	295, 292, 285, 288, 288, 290, 297, 285, 
	16, 312, 312, 284, 297, 285, 307, 284, 
	308, 284, 308, 298, 297, 285, 16, 299, 
	284, 299, 298, 297, 285, 300, 298, 16, 
	299, 284, 299, 298, 302, 294, 298, 16, 
	306, 293, 306, 301, 302, 294, 298, 16, 
	306, 293, 306, 301, 302, 294, 296, 293, 
	303, 293, 303, 301, 304, 285, 296, 301, 
	16, 306, 293, 306, 301, 304, 294, 296, 
	293, 305, 293, 305, 301, 304, 285, 298, 
	301, 16, 306, 293, 306, 301, 304, 294, 
	298, 301, 16, 306, 293, 306, 301, 294, 
	296, 293, 297, 285, 309, 298, 16, 299, 
	284, 299, 298, 302, 294, 298, 16, 311, 
	293, 311, 310, 302, 294, 298, 16, 311, 
	293, 311, 310, 304, 294, 281, 310, 16, 
	311, 293, 311, 310, 312, 285, 307, 284, 
	284, 298, 314, 292, 285, 290, 16, 315, 
	288, 315, 290, 314, 292, 285, 288, 315, 
	288, 315, 290, 314, 292, 281, 290, 16, 
	315, 288, 315, 290, 319, 283, 425, 279, 
	16, 433, 0, 433, 317, 280, 0, 16, 
	318, 0, 318, 317, 319, 283, 396, 317, 
	16, 318, 0, 318, 317, 319, 283, 287, 
	0, 320, 0, 320, 281, 280, 283, 321, 
	281, 16, 282, 0, 282, 281, 323, 288, 
	281, 16, 395, 288, 395, 322, 323, 288, 
	281, 16, 395, 288, 395, 322, 323, 324, 
	285, 288, 393, 288, 393, 322, 326, 328, 
	325, 326, 328, 325, 323, 285, 16, 327, 
	327, 288, 327, 324, 285, 288, 288, 322, 
	329, 285, 16, 392, 392, 284, 329, 285, 
	339, 284, 340, 284, 340, 330, 329, 285, 
	16, 331, 284, 331, 330, 329, 285, 332, 
	330, 16, 331, 284, 331, 330, 334, 326, 
	330, 16, 338, 325, 338, 333, 334, 326, 
	330, 16, 338, 325, 338, 333, 334, 326, 
	328, 325, 335, 325, 335, 333, 336, 285, 
	328, 333, 16, 338, 325, 338, 333, 336, 
	326, 328, 325, 337, 325, 337, 333, 336, 
	285, 330, 333, 16, 338, 325, 338, 333, 
	336, 326, 330, 333, 16, 338, 325, 338, 
	333, 326, 328, 325, 329, 285, 341, 330, 
	16, 331, 284, 331, 330, 334, 326, 330, 
	16, 343, 325, 343, 342, 334, 326, 330, 
	16, 343, 325, 343, 342, 336, 326, 344, 
	342, 16, 343, 325, 343, 342, 345, 285, 
	16, 385, 284, 385, 344, 345, 285, 346, 
	284, 385, 284, 385, 344, 348, 382, 347, 
	348, 382, 347, 349, 285, 16, 384, 384, 
	288, 349, 381, 285, 288, 380, 288, 380, 
	350, 349, 288, 351, 16, 380, 288, 380, 
	350, 280, 0, 16, 352, 0, 352, 281, 
	319, 283, 353, 281, 16, 320, 0, 320, 
	281, 355, 288, 351, 16, 379, 288, 379, 
	354, 355, 288, 351, 16, 379, 288, 379, 
	354, 355, 356, 285, 288, 377, 288, 377, 
	354, 358, 360, 357, 358, 360, 357, 355, 
	285, 16, 359, 359, 288, 359, 356, 285, 
	288, 288, 354, 361, 285, 16, 376, 376, 
	284, 361, 285, 371, 284, 372, 284, 372, 
	362, 361, 285, 16, 363, 284, 363, 362, 
	361, 285, 364, 362, 16, 363, 284, 363, 
	362, 366, 358, 362, 16, 370, 357, 370, 
	365, 366, 358, 362, 16, 370, 357, 370, 
	365, 366, 294, 360, 357, 367, 357, 367, 
	365, 368, 285, 360, 365, 16, 370, 357, 
	370, 365, 368, 294, 360, 357, 369, 357, 
	369, 365, 368, 285, 362, 365, 16, 370, 
	357, 370, 365, 368, 294, 362, 365, 16, 
	370, 357, 370, 365, 358, 360, 357, 361, 
	285, 373, 362, 16, 363, 284, 363, 362, 
	366, 358, 362, 16, 375, 357, 375, 374, 
	366, 358, 362, 16, 375, 357, 375, 374, 
	368, 294, 281, 374, 16, 375, 357, 375, 
	374, 376, 285, 371, 284, 284, 362, 378, 
	356, 285, 354, 16, 379, 288, 379, 354, 
	378, 356, 285, 288, 379, 288, 379, 354, 
	378, 356, 351, 354, 16, 379, 288, 379, 
	354, 349, 381, 285, 350, 16, 380, 288, 
	380, 350, 348, 382, 347, 345, 285, 16, 
	383, 383, 284, 383, 285, 346, 284, 284, 
	344, 384, 381, 285, 288, 288, 350, 345, 
	285, 386, 344, 16, 385, 284, 385, 344, 
	388, 348, 344, 16, 391, 347, 391, 387, 
	388, 348, 344, 16, 391, 347, 391, 387, 
	388, 285, 382, 347, 389, 347, 389, 387, 
	390, 285, 382, 387, 16, 391, 347, 391, 
	387, 390, 285, 382, 347, 391, 347, 391, 
	387, 390, 285, 344, 387, 16, 391, 347, 
	391, 387, 392, 285, 339, 284, 284, 330, 
	394, 324, 285, 322, 16, 395, 288, 395, 
	322, 394, 324, 285, 288, 395, 288, 395, 
	322, 394, 324, 281, 322, 16, 395, 288, 
	395, 322, 398, 288, 317, 16, 424, 288, 
	424, 397, 398, 288, 317, 16, 424, 288, 
	424, 397, 398, 402, 285, 288, 423, 288, 
	423, 399, 398, 288, 351, 16, 400, 288, 
	400, 399, 401, 402, 351, 399, 16, 400, 
	288, 400, 399, 401, 402, 285, 288, 400, 
	288, 400, 399, 404, 406, 403, 404, 406, 
	403, 398, 285, 16, 405, 405, 288, 405, 
	402, 285, 288, 288, 399, 407, 285, 16, 
	422, 422, 284, 407, 285, 417, 284, 418, 
	284, 418, 408, 407, 285, 16, 409, 284, 
	409, 408, 407, 285, 410, 408, 16, 409, 
	284, 409, 408, 412, 404, 408, 16, 416, 
	403, 416, 411, 412, 404, 408, 16, 416, 
	403, 416, 411, 412, 326, 406, 403, 413, 
	403, 413, 411, 414, 285, 406, 411, 16, 
	416, 403, 416, 411, 414, 326, 406, 403, 
	415, 403, 415, 411, 414, 285, 408, 411, 
	16, 416, 403, 416, 411, 414, 326, 408, 
	411, 16, 416, 403, 416, 411, 404, 406, 
	403, 407, 285, 419, 408, 16, 409, 284, 
	409, 408, 412, 404, 408, 16, 421, 403, 
	421, 420, 412, 404, 408, 16, 421, 403, 
	421, 420, 414, 326, 344, 420, 16, 421, 
	403, 421, 420, 422, 285, 417, 284, 284, 
	408, 401, 402, 285, 399, 16, 400, 288, 
	400, 399, 401, 402, 317, 397, 16, 424, 
	288, 424, 397, 349, 288, 279, 16, 427, 
	288, 427, 426, 349, 288, 279, 16, 427, 
	288, 427, 426, 430, 381, 279, 426, 16, 
	432, 288, 432, 428, 349, 288, 317, 16, 
	429, 288, 429, 428, 430, 381, 279, 428, 
	16, 432, 288, 432, 428, 430, 381, 285, 
	288, 431, 288, 431, 350, 349, 381, 351, 
	350, 16, 380, 288, 380, 350, 430, 381, 
	317, 428, 16, 432, 288, 432, 428, 319, 
	283, 434, 317, 16, 318, 0, 318, 317, 
	349, 288, 317, 16, 429, 288, 429, 428, 
	0, 7, 10, 278, 0, 2, 0, 7, 
	10, 278, 0, 2, 437, 3, 0, 0, 
	136, 2, 438, 3, 0, 0, 5, 4, 
	439, 3, 0, 0, 0, 6, 0, 0
]

class << self
	attr_accessor :_parser_trans_actions
	private :_parser_trans_actions, :_parser_trans_actions=
end
self._parser_trans_actions = [
	49, 0, 53, 53, 53, 0, 0, 7, 
	49, 12, 12, 7, 7, 9, 0, 49, 
	0, 53, 53, 53, 0, 0, 7, 49, 
	12, 12, 7, 7, 9, 0, 0, 5, 
	5, 5, 0, 1, 12, 12, 7, 7, 
	7, 0, 25, 1, 15, 0, 3, 3, 
	7, 25, 1, 15, 0, 0, 5, 5, 
	0, 0, 1, 12, 0, 33, 12, 0, 
	12, 0, 0, 5, 5, 0, 1, 0, 
	1, 1, 12, 0, 33, 12, 0, 12, 
	0, 0, 0, 7, 12, 5, 5, 0, 
	33, 21, 0, 21, 1, 25, 1, 15, 
	0, 3, 18, 3, 3, 0, 0, 5, 
	5, 0, 0, 1, 25, 1, 15, 0, 
	21, 1, 25, 33, 21, 1, 21, 1, 
	12, 0, 15, 33, 12, 0, 12, 0, 
	0, 5, 15, 0, 1, 0, 1, 1, 
	25, 25, 1, 15, 15, 0, 3, 15, 
	18, 3, 3, 0, 0, 5, 15, 0, 
	0, 1, 3, 15, 18, 3, 3, 0, 
	0, 15, 5, 0, 1, 0, 1, 1, 
	12, 15, 33, 12, 0, 12, 0, 12, 
	15, 5, 0, 33, 21, 0, 21, 1, 
	21, 37, 25, 33, 21, 1, 21, 1, 
	12, 15, 15, 33, 12, 0, 12, 0, 
	0, 15, 15, 0, 1, 0, 1, 1, 
	12, 15, 15, 0, 33, 21, 0, 21, 
	1, 37, 25, 1, 12, 15, 5, 0, 
	33, 21, 0, 21, 1, 21, 37, 25, 
	33, 21, 1, 21, 1, 12, 15, 15, 
	33, 12, 0, 12, 0, 12, 15, 15, 
	0, 33, 21, 0, 21, 1, 0, 15, 
	5, 0, 0, 1, 12, 5, 15, 0, 
	33, 21, 0, 21, 1, 12, 5, 5, 
	0, 33, 21, 0, 21, 1, 21, 1, 
	25, 33, 21, 1, 21, 1, 12, 0, 
	15, 33, 12, 0, 12, 0, 12, 5, 
	15, 0, 33, 21, 0, 21, 1, 12, 
	5, 5, 0, 33, 29, 0, 29, 1, 
	12, 0, 33, 12, 0, 12, 0, 12, 
	5, 5, 0, 33, 29, 0, 29, 1, 
	29, 1, 25, 33, 29, 1, 29, 1, 
	12, 0, 15, 33, 12, 0, 12, 0, 
	12, 5, 15, 0, 33, 29, 0, 29, 
	1, 0, 5, 15, 0, 1, 0, 1, 
	1, 12, 5, 15, 0, 33, 21, 0, 
	21, 1, 12, 5, 15, 0, 33, 29, 
	0, 29, 1, 29, 1, 25, 33, 29, 
	1, 29, 1, 12, 0, 15, 33, 12, 
	0, 12, 0, 12, 5, 15, 0, 33, 
	29, 0, 29, 1, 12, 0, 15, 33, 
	12, 0, 12, 0, 12, 5, 15, 0, 
	33, 29, 0, 29, 1, 12, 5, 5, 
	0, 33, 29, 0, 29, 1, 29, 1, 
	25, 33, 29, 1, 29, 1, 0, 5, 
	5, 0, 0, 1, 12, 0, 33, 12, 
	0, 12, 0, 0, 5, 5, 0, 1, 
	0, 1, 1, 12, 0, 33, 12, 0, 
	12, 0, 12, 5, 5, 0, 33, 21, 
	0, 21, 1, 25, 1, 15, 0, 3, 
	18, 3, 3, 0, 0, 5, 5, 0, 
	0, 1, 25, 1, 15, 0, 21, 1, 
	25, 33, 21, 1, 21, 1, 12, 0, 
	15, 33, 12, 0, 12, 0, 0, 5, 
	15, 0, 1, 0, 1, 1, 25, 25, 
	1, 15, 15, 0, 3, 15, 18, 3, 
	3, 0, 0, 5, 15, 0, 0, 1, 
	3, 15, 18, 3, 3, 0, 0, 15, 
	5, 0, 1, 0, 1, 1, 12, 15, 
	33, 12, 0, 12, 0, 12, 15, 5, 
	0, 33, 21, 0, 21, 1, 21, 37, 
	25, 33, 21, 1, 21, 1, 12, 15, 
	15, 33, 12, 0, 12, 0, 0, 15, 
	15, 0, 1, 0, 1, 1, 12, 15, 
	15, 0, 33, 21, 0, 21, 1, 0, 
	15, 15, 0, 1, 0, 1, 1, 12, 
	15, 15, 0, 33, 21, 0, 21, 1, 
	37, 25, 1, 0, 15, 5, 0, 0, 
	1, 12, 5, 15, 0, 33, 21, 0, 
	21, 1, 0, 5, 15, 0, 1, 0, 
	1, 1, 12, 5, 15, 0, 33, 21, 
	0, 21, 1, 12, 5, 5, 0, 33, 
	29, 0, 29, 1, 12, 0, 33, 12, 
	0, 12, 0, 12, 5, 5, 0, 33, 
	29, 0, 29, 1, 29, 1, 25, 33, 
	29, 1, 29, 1, 12, 0, 15, 33, 
	12, 0, 12, 0, 12, 5, 15, 0, 
	33, 29, 0, 29, 1, 29, 1, 25, 
	33, 29, 1, 29, 1, 12, 0, 15, 
	33, 12, 0, 12, 0, 0, 5, 15, 
	0, 1, 0, 1, 1, 12, 0, 15, 
	33, 12, 0, 12, 0, 12, 5, 15, 
	0, 33, 21, 0, 21, 1, 25, 25, 
	1, 15, 15, 0, 3, 15, 18, 3, 
	3, 0, 0, 5, 15, 0, 0, 1, 
	3, 15, 18, 3, 3, 0, 0, 15, 
	5, 0, 1, 0, 1, 1, 12, 15, 
	33, 12, 0, 12, 0, 12, 15, 5, 
	0, 33, 21, 0, 21, 1, 21, 37, 
	25, 33, 21, 1, 21, 1, 12, 15, 
	15, 33, 12, 0, 12, 0, 0, 15, 
	15, 0, 1, 0, 1, 1, 12, 15, 
	15, 0, 33, 21, 0, 21, 1, 0, 
	15, 15, 0, 1, 0, 1, 1, 12, 
	15, 15, 0, 33, 21, 0, 21, 1, 
	37, 25, 1, 0, 15, 5, 0, 0, 
	1, 12, 5, 15, 0, 33, 29, 0, 
	29, 1, 12, 0, 15, 33, 12, 0, 
	12, 0, 12, 5, 15, 0, 33, 29, 
	0, 29, 1, 0, 5, 15, 0, 1, 
	0, 1, 1, 12, 5, 15, 0, 33, 
	21, 0, 21, 1, 12, 5, 15, 0, 
	33, 29, 0, 29, 1, 12, 5, 5, 
	0, 33, 29, 0, 29, 1, 29, 1, 
	25, 33, 29, 1, 29, 1, 0, 53, 
	53, 53, 0, 49, 0, 45, 45, 45, 
	0, 41, 0, 5, 5, 5, 0, 1, 
	0, 5, 5, 0, 0, 1, 12, 0, 
	33, 12, 0, 12, 0, 0, 5, 5, 
	0, 1, 0, 1, 1, 12, 0, 33, 
	12, 0, 12, 0, 12, 5, 5, 0, 
	33, 21, 0, 21, 1, 25, 1, 15, 
	0, 3, 18, 3, 3, 0, 0, 5, 
	5, 0, 0, 1, 25, 1, 15, 0, 
	21, 1, 25, 33, 21, 1, 21, 1, 
	12, 0, 15, 33, 12, 0, 12, 0, 
	0, 5, 15, 0, 1, 0, 1, 1, 
	25, 25, 1, 15, 15, 0, 3, 15, 
	18, 3, 3, 0, 0, 5, 15, 0, 
	0, 1, 3, 15, 18, 3, 3, 0, 
	0, 15, 5, 0, 1, 0, 1, 1, 
	12, 15, 33, 12, 0, 12, 0, 12, 
	15, 5, 0, 33, 21, 0, 21, 1, 
	21, 37, 25, 33, 21, 1, 21, 1, 
	12, 15, 15, 33, 12, 0, 12, 0, 
	0, 15, 15, 0, 1, 0, 1, 1, 
	12, 15, 15, 0, 33, 21, 0, 21, 
	1, 0, 15, 15, 0, 1, 0, 1, 
	1, 12, 15, 15, 0, 33, 21, 0, 
	21, 1, 12, 15, 15, 0, 33, 21, 
	0, 21, 1, 37, 25, 1, 0, 15, 
	5, 0, 0, 1, 12, 5, 15, 0, 
	33, 21, 0, 21, 1, 0, 5, 15, 
	0, 1, 0, 1, 1, 12, 5, 15, 
	0, 33, 21, 0, 21, 1, 12, 5, 
	5, 0, 33, 29, 0, 29, 1, 12, 
	0, 33, 12, 0, 12, 0, 12, 5, 
	5, 0, 33, 29, 0, 29, 1, 0, 
	5, 5, 0, 1, 0, 1, 1, 12, 
	5, 5, 0, 33, 21, 0, 21, 1, 
	21, 1, 25, 33, 21, 1, 21, 1, 
	12, 0, 15, 33, 12, 0, 12, 0, 
	0, 5, 15, 0, 1, 0, 1, 1, 
	25, 25, 1, 15, 15, 0, 3, 15, 
	18, 3, 3, 0, 0, 5, 15, 0, 
	0, 1, 3, 15, 18, 3, 3, 0, 
	0, 15, 5, 0, 1, 0, 1, 1, 
	12, 15, 33, 12, 0, 12, 0, 12, 
	15, 5, 0, 33, 21, 0, 21, 1, 
	21, 37, 25, 33, 21, 1, 21, 1, 
	12, 15, 15, 33, 12, 0, 12, 0, 
	0, 15, 15, 0, 1, 0, 1, 1, 
	3, 15, 18, 3, 3, 0, 0, 15, 
	5, 0, 1, 0, 1, 1, 12, 15, 
	33, 12, 0, 12, 0, 12, 15, 5, 
	0, 33, 21, 0, 21, 1, 21, 37, 
	25, 33, 21, 1, 21, 1, 12, 15, 
	15, 33, 12, 0, 12, 0, 0, 15, 
	15, 0, 1, 0, 1, 1, 15, 15, 
	0, 3, 15, 18, 3, 3, 0, 0, 
	5, 15, 0, 1, 0, 1, 1, 12, 
	0, 15, 33, 12, 0, 12, 0, 12, 
	0, 33, 12, 0, 12, 0, 12, 5, 
	5, 0, 33, 21, 0, 21, 1, 21, 
	1, 25, 33, 21, 1, 21, 1, 12, 
	0, 15, 33, 12, 0, 12, 0, 0, 
	5, 15, 0, 1, 0, 1, 1, 25, 
	25, 1, 15, 15, 0, 3, 15, 18, 
	3, 3, 0, 0, 5, 15, 0, 0, 
	1, 3, 15, 18, 3, 3, 0, 0, 
	15, 5, 0, 1, 0, 1, 1, 12, 
	15, 33, 12, 0, 12, 0, 12, 15, 
	5, 0, 33, 21, 0, 21, 1, 21, 
	37, 25, 33, 21, 1, 21, 1, 12, 
	15, 15, 33, 12, 0, 12, 0, 0, 
	15, 15, 0, 1, 0, 1, 1, 12, 
	15, 15, 0, 33, 21, 0, 21, 1, 
	0, 15, 15, 0, 1, 0, 1, 1, 
	12, 15, 15, 0, 33, 21, 0, 21, 
	1, 12, 15, 15, 0, 33, 21, 0, 
	21, 1, 37, 25, 1, 0, 15, 5, 
	0, 0, 1, 12, 5, 15, 0, 33, 
	21, 0, 21, 1, 0, 5, 15, 0, 
	1, 0, 1, 1, 12, 5, 15, 0, 
	33, 21, 0, 21, 1, 12, 5, 15, 
	0, 33, 21, 0, 21, 1, 25, 25, 
	1, 0, 5, 15, 0, 0, 1, 12, 
	15, 15, 0, 33, 21, 0, 21, 1, 
	0, 15, 15, 0, 1, 0, 1, 1, 
	12, 15, 15, 0, 33, 21, 0, 21, 
	1, 37, 25, 1, 0, 15, 5, 0, 
	0, 1, 12, 15, 15, 0, 33, 21, 
	0, 21, 1, 0, 15, 15, 0, 1, 
	0, 1, 1, 12, 15, 15, 0, 33, 
	21, 0, 21, 1, 12, 15, 15, 0, 
	33, 21, 0, 21, 1, 37, 25, 1, 
	0, 15, 5, 0, 0, 1, 12, 5, 
	15, 0, 33, 21, 0, 21, 1, 0, 
	5, 15, 0, 1, 0, 1, 1, 12, 
	5, 15, 0, 33, 21, 0, 21, 1, 
	29, 1, 25, 33, 29, 1, 29, 1, 
	12, 0, 15, 33, 12, 0, 12, 0, 
	0, 5, 15, 0, 1, 0, 1, 1, 
	12, 0, 15, 33, 12, 0, 12, 0, 
	12, 5, 15, 0, 33, 21, 0, 21, 
	1, 0, 5, 15, 0, 1, 0, 1, 
	1, 25, 25, 1, 15, 15, 0, 3, 
	15, 18, 3, 3, 0, 0, 5, 15, 
	0, 0, 1, 3, 15, 18, 3, 3, 
	0, 0, 15, 5, 0, 1, 0, 1, 
	1, 12, 15, 33, 12, 0, 12, 0, 
	12, 15, 5, 0, 33, 21, 0, 21, 
	1, 21, 37, 25, 33, 21, 1, 21, 
	1, 12, 15, 15, 33, 12, 0, 12, 
	0, 0, 15, 15, 0, 1, 0, 1, 
	1, 12, 15, 15, 0, 33, 21, 0, 
	21, 1, 0, 15, 15, 0, 1, 0, 
	1, 1, 12, 15, 15, 0, 33, 21, 
	0, 21, 1, 12, 15, 15, 0, 33, 
	21, 0, 21, 1, 37, 25, 1, 0, 
	15, 5, 0, 0, 1, 12, 5, 15, 
	0, 33, 21, 0, 21, 1, 12, 5, 
	15, 0, 33, 29, 0, 29, 1, 29, 
	1, 25, 33, 29, 1, 29, 1, 12, 
	0, 15, 33, 12, 0, 12, 0, 12, 
	5, 15, 0, 33, 29, 0, 29, 1, 
	12, 0, 15, 33, 12, 0, 12, 0, 
	12, 5, 15, 0, 33, 29, 0, 29, 
	1, 0, 5, 15, 0, 1, 0, 1, 
	1, 12, 5, 15, 0, 33, 21, 0, 
	21, 1, 12, 5, 15, 0, 33, 29, 
	0, 29, 1, 12, 5, 5, 0, 33, 
	29, 0, 29, 1, 29, 1, 25, 33, 
	29, 1, 29, 1, 0, 5, 5, 0, 
	0, 1, 12, 0, 33, 12, 0, 12, 
	0, 0, 5, 5, 0, 1, 0, 1, 
	1, 12, 0, 33, 12, 0, 12, 0, 
	12, 5, 5, 0, 33, 21, 0, 21, 
	1, 25, 1, 15, 0, 3, 18, 3, 
	3, 0, 0, 5, 5, 0, 0, 1, 
	25, 1, 15, 0, 21, 1, 25, 33, 
	21, 1, 21, 1, 12, 0, 15, 33, 
	12, 0, 12, 0, 0, 5, 15, 0, 
	1, 0, 1, 1, 25, 25, 1, 15, 
	15, 0, 3, 15, 18, 3, 3, 0, 
	0, 5, 15, 0, 0, 1, 3, 15, 
	18, 3, 3, 0, 0, 15, 5, 0, 
	1, 0, 1, 1, 12, 15, 33, 12, 
	0, 12, 0, 12, 15, 5, 0, 33, 
	21, 0, 21, 1, 21, 37, 25, 33, 
	21, 1, 21, 1, 12, 15, 15, 33, 
	12, 0, 12, 0, 0, 15, 15, 0, 
	1, 0, 1, 1, 12, 15, 15, 0, 
	33, 21, 0, 21, 1, 0, 15, 15, 
	0, 1, 0, 1, 1, 12, 15, 15, 
	0, 33, 21, 0, 21, 1, 12, 15, 
	15, 0, 33, 21, 0, 21, 1, 37, 
	25, 1, 12, 15, 5, 0, 33, 21, 
	0, 21, 1, 21, 37, 25, 33, 21, 
	1, 21, 1, 12, 15, 15, 33, 12, 
	0, 12, 0, 12, 15, 15, 0, 33, 
	21, 0, 21, 1, 0, 15, 5, 0, 
	0, 1, 12, 5, 15, 0, 33, 21, 
	0, 21, 1, 0, 5, 15, 0, 1, 
	0, 1, 1, 12, 5, 15, 0, 33, 
	21, 0, 21, 1, 12, 5, 5, 0, 
	33, 29, 0, 29, 1, 12, 0, 33, 
	12, 0, 12, 0, 12, 5, 5, 0, 
	33, 29, 0, 29, 1, 0, 5, 5, 
	0, 1, 0, 1, 1, 12, 5, 5, 
	0, 33, 21, 0, 21, 1, 21, 1, 
	25, 33, 21, 1, 21, 1, 12, 0, 
	15, 33, 12, 0, 12, 0, 0, 5, 
	15, 0, 1, 0, 1, 1, 25, 25, 
	1, 15, 15, 0, 3, 15, 18, 3, 
	3, 0, 0, 5, 15, 0, 0, 1, 
	3, 15, 18, 3, 3, 0, 0, 15, 
	5, 0, 1, 0, 1, 1, 12, 15, 
	33, 12, 0, 12, 0, 12, 15, 5, 
	0, 33, 21, 0, 21, 1, 21, 37, 
	25, 33, 21, 1, 21, 1, 12, 15, 
	15, 33, 12, 0, 12, 0, 0, 15, 
	15, 0, 1, 0, 1, 1, 12, 15, 
	15, 0, 33, 21, 0, 21, 1, 0, 
	15, 15, 0, 1, 0, 1, 1, 12, 
	15, 15, 0, 33, 21, 0, 21, 1, 
	12, 15, 15, 0, 33, 21, 0, 21, 
	1, 37, 25, 1, 12, 15, 5, 0, 
	33, 21, 0, 21, 1, 21, 37, 25, 
	33, 21, 1, 21, 1, 12, 15, 15, 
	33, 12, 0, 12, 0, 12, 15, 15, 
	0, 33, 21, 0, 21, 1, 12, 15, 
	33, 12, 0, 12, 0, 0, 15, 5, 
	0, 1, 0, 1, 1, 37, 25, 1, 
	15, 15, 0, 3, 15, 18, 3, 3, 
	0, 0, 5, 15, 0, 1, 0, 1, 
	1, 12, 0, 15, 33, 12, 0, 12, 
	0, 12, 0, 33, 12, 0, 12, 0, 
	12, 5, 5, 0, 33, 21, 0, 21, 
	1, 21, 1, 25, 33, 21, 1, 21, 
	1, 12, 0, 15, 33, 12, 0, 12, 
	0, 0, 5, 15, 0, 1, 0, 1, 
	1, 25, 25, 1, 15, 15, 0, 3, 
	15, 18, 3, 3, 0, 0, 5, 15, 
	0, 0, 1, 3, 15, 18, 3, 3, 
	0, 0, 15, 5, 0, 1, 0, 1, 
	1, 12, 15, 33, 12, 0, 12, 0, 
	12, 15, 5, 0, 33, 21, 0, 21, 
	1, 21, 37, 25, 33, 21, 1, 21, 
	1, 12, 15, 15, 33, 12, 0, 12, 
	0, 0, 15, 15, 0, 1, 0, 1, 
	1, 12, 15, 15, 0, 33, 21, 0, 
	21, 1, 0, 15, 15, 0, 1, 0, 
	1, 1, 12, 15, 15, 0, 33, 21, 
	0, 21, 1, 12, 15, 15, 0, 33, 
	21, 0, 21, 1, 37, 25, 1, 12, 
	15, 5, 0, 33, 21, 0, 21, 1, 
	21, 37, 25, 33, 21, 1, 21, 1, 
	12, 15, 15, 33, 12, 0, 12, 0, 
	12, 15, 15, 0, 33, 21, 0, 21, 
	1, 0, 15, 5, 0, 0, 1, 12, 
	5, 15, 0, 33, 21, 0, 21, 1, 
	0, 5, 15, 0, 1, 0, 1, 1, 
	12, 5, 15, 0, 33, 21, 0, 21, 
	1, 12, 5, 15, 0, 33, 21, 0, 
	21, 1, 25, 25, 1, 3, 15, 18, 
	3, 3, 0, 0, 15, 5, 0, 0, 
	1, 0, 5, 15, 0, 0, 1, 12, 
	15, 5, 0, 33, 21, 0, 21, 1, 
	21, 37, 25, 33, 21, 1, 21, 1, 
	12, 15, 15, 33, 12, 0, 12, 0, 
	0, 15, 15, 0, 1, 0, 1, 1, 
	12, 15, 15, 0, 33, 21, 0, 21, 
	1, 0, 15, 15, 0, 1, 0, 1, 
	1, 12, 15, 15, 0, 33, 21, 0, 
	21, 1, 0, 15, 5, 0, 0, 1, 
	12, 5, 15, 0, 33, 21, 0, 21, 
	1, 0, 5, 15, 0, 1, 0, 1, 
	1, 12, 5, 15, 0, 33, 21, 0, 
	21, 1, 29, 1, 25, 33, 29, 1, 
	29, 1, 12, 0, 15, 33, 12, 0, 
	12, 0, 0, 5, 15, 0, 1, 0, 
	1, 1, 12, 0, 15, 33, 12, 0, 
	12, 0, 12, 5, 15, 0, 33, 21, 
	0, 21, 1, 0, 5, 15, 0, 1, 
	0, 1, 1, 25, 25, 1, 15, 15, 
	0, 3, 15, 18, 3, 3, 0, 0, 
	5, 15, 0, 0, 1, 3, 15, 18, 
	3, 3, 0, 0, 15, 5, 0, 1, 
	0, 1, 1, 12, 15, 33, 12, 0, 
	12, 0, 12, 15, 5, 0, 33, 21, 
	0, 21, 1, 21, 37, 25, 33, 21, 
	1, 21, 1, 12, 15, 15, 33, 12, 
	0, 12, 0, 0, 15, 15, 0, 1, 
	0, 1, 1, 12, 15, 15, 0, 33, 
	21, 0, 21, 1, 0, 15, 15, 0, 
	1, 0, 1, 1, 12, 15, 15, 0, 
	33, 21, 0, 21, 1, 12, 15, 15, 
	0, 33, 21, 0, 21, 1, 37, 25, 
	1, 12, 15, 5, 0, 33, 21, 0, 
	21, 1, 21, 37, 25, 33, 21, 1, 
	21, 1, 12, 15, 15, 33, 12, 0, 
	12, 0, 12, 15, 15, 0, 33, 21, 
	0, 21, 1, 0, 15, 5, 0, 0, 
	1, 12, 5, 15, 0, 33, 21, 0, 
	21, 1, 12, 5, 15, 0, 33, 29, 
	0, 29, 1, 29, 1, 25, 33, 29, 
	1, 29, 1, 12, 0, 15, 33, 12, 
	0, 12, 0, 12, 5, 15, 0, 33, 
	29, 0, 29, 1, 12, 0, 15, 33, 
	12, 0, 12, 0, 12, 5, 15, 0, 
	33, 29, 0, 29, 1, 0, 5, 15, 
	0, 1, 0, 1, 1, 12, 5, 15, 
	0, 33, 21, 0, 21, 1, 12, 5, 
	15, 0, 33, 29, 0, 29, 1, 12, 
	5, 5, 0, 33, 29, 0, 29, 1, 
	29, 1, 25, 33, 29, 1, 29, 1, 
	0, 53, 53, 53, 0, 49, 0, 45, 
	45, 45, 0, 41, 12, 12, 7, 7, 
	9, 0, 12, 12, 7, 7, 9, 0, 
	12, 12, 7, 7, 7, 0, 0, 0
]

class << self
	attr_accessor :_parser_eof_actions
	private :_parser_eof_actions, :_parser_eof_actions=
end
self._parser_eof_actions = [
	0, 7, 7, 7, 7, 0, 7, 0, 
	0, 7, 0, 0, 0, 0, 0, 0, 
	7, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0
]

class << self
	attr_accessor :parser_start
end
self.parser_start = 1;
class << self
	attr_accessor :parser_first_final
end
self.parser_first_final = 437;
class << self
	attr_accessor :parser_error
end
self.parser_error = 0;

class << self
	attr_accessor :parser_en_main
end
self.parser_en_main = 1;


# line 91 "lib/keyword_search.rl"
    	p = 0
      eof = nil
      word = nil
    	pe = data.length
    	key = nil
      positive_match = nil
    	tokstart = nil
    	results = {}
    	quotes = 0
      
# line 1532 "lib/keyword_search.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = parser_start
end

# line 101 "lib/keyword_search.rl"
      
# line 1541 "lib/keyword_search.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _parser_key_offsets[cs]
	_trans = _parser_index_offsets[cs]
	_klen = _parser_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _parser_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif data[p].ord > _parser_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _parser_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _parser_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif data[p].ord > _parser_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	cs = _parser_trans_targs[_trans]
	if _parser_trans_actions[_trans] != 0
		_acts = _parser_trans_actions[_trans]
		_nacts = _parser_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _parser_actions[_acts - 1]
when 0 then
# line 13 "lib/keyword_search.rl"
		begin

        tokstart = p;
      		end
when 1 then
# line 17 "lib/keyword_search.rl"
		begin

        key = word
        results[key] ||= []
      		end
when 2 then
# line 22 "lib/keyword_search.rl"
		begin

        key = nil
      		end
when 3 then
# line 26 "lib/keyword_search.rl"
		begin

        word = data[tokstart..p-1]
      		end
when 4 then
# line 30 "lib/keyword_search.rl"
		begin

        (results[key || :default] ||= []) << [ word, positive_match ]
      		end
when 5 then
# line 34 "lib/keyword_search.rl"
		begin

        positive_match = false
      		end
when 6 then
# line 38 "lib/keyword_search.rl"
		begin

        positive_match = true
      		end
when 7 then
# line 42 "lib/keyword_search.rl"
		begin
 quotes += 1 		end
when 8 then
# line 44 "lib/keyword_search.rl"
		begin
 quotes -= 1 		end
when 9 then
# line 71 "lib/keyword_search.rl"
		begin
 raise ParseError, "At offset #{p}, near: '#{data[p,10]}'" 		end
# line 1676 "lib/keyword_search.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	__acts = _parser_eof_actions[cs]
	__nacts =  _parser_actions[__acts]
	__acts += 1
	while __nacts > 0
		__nacts -= 1
		__acts += 1
		case _parser_actions[__acts - 1]
when 9 then
# line 71 "lib/keyword_search.rl"
		begin
 raise ParseError, "At offset #{p}, near: '#{data[p,10]}'" 		end
# line 1708 "lib/keyword_search.rb"
		end # eof action switch
	end
	if _trigger_goto
		next
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end

# line 102 "lib/keyword_search.rl"
    	unless quotes.zero?
    	  raise ParseError, "Unclosed quotes"
    	end
    	results
    end
    
  end
  
end


